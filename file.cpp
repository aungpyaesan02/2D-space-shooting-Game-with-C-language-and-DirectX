//=============================================================================
//

//
//=============================================================================

#include "file.h"


/*******************************************************************************
* マクロ定義
*******************************************************************************/

/*******************************************************************************
* 構造体定義
*******************************************************************************/

/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/

/*******************************************************************************
* グローバル変数
*******************************************************************************/
SAVEDATA	save;		// セーブデータ作成場所



//=============================================================================
// セーブデータ読み込み
//=============================================================================

void LoadHighscore(void)
{
	// ファイルからセーブデータを読み込む
	FILE* fp;

	printf("\nロード開始・・・");
	fp = fopen("savedata.bin", "rb");	// ファイルをバイナリ読み込みモードでOpenする

	if (fp != NULL)						// ファイルがあれば書き込み、無ければ無視
	{
		fread(&save, 1, sizeof(SAVEDATA), fp);	// 指定したアドレスへ指定したバイト数分ファイルから読み込む
		fclose(fp);								// Openしていたファイルを閉じる
		printf("終了！\n");
	}
	else
	{
		printf("ファイルエラー！\n");
	}


	int *highScore = GetHighScore();
	for (int i = 0; i < HIGHSCORE_MAX; i++)
	{

		highScore[i] = save.highScore[i];
	}

}

//=============================================================================
// セーブデータ作成＆ファイル出力
//=============================================================================

void SaveHighscore(void)
{

	
	int *highScore = GetHighScore();

	for (int i = 0; i < HIGHSCORE_MAX; i++)
	{

		save.highScore[i] = highScore[i];
	}



	// SAVEDATA構造体ごと全部をファイルに出力する
	FILE *fp;
	
	
	printf("\nセーブ開始・・・");
	fp = fopen("savedata.bin", "wb");			// ファイルをバイナリ書き込みモードでOpenする

	if (fp != NULL)								// ファイルがあれば書き込み、無ければ無視
	{
		fwrite(&save, 1, sizeof(SAVEDATA), fp);	// 指定したアドレスから指定したバイト数分ファイルへ書き込む
		fclose(fp);								// Openしていたファイルを閉じる
		printf("終了！\n");
	}
	else

	{
		printf("ファイルエラー！\n");
	}

}